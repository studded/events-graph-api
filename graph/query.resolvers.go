package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.47

import (
	"context"

	"github.com/studded/events-graph-api/graph/model"
)

// Events is the resolver for the events field.
func (r *queryResolver) Events(ctx context.Context, limit *int, offset *int) ([]*model.Event, error) {
	return r.EventsRepo.GetEvents(limit, offset)
}

// Event is the resolver for the event field.
func (r *queryResolver) Event(ctx context.Context, id int) (*model.Event, error) {
	return r.EventsRepo.GetEventByID(id)
}

// Users is the resolver for the users field.
func (r *queryResolver) Users(ctx context.Context, limit *int, offset *int) ([]*model.User, error) {
	return r.UsersRepo.GetUsers(limit, offset)
}

// User is the resolver for the user field.
func (r *queryResolver) User(ctx context.Context, email string) (*model.User, error) {
	return r.UsersRepo.GetUserByEmail(email)
}

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type queryResolver struct{ *Resolver }
